<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_liisa_support_ca.GetUserCompanyAndKnowledgeBase</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>GetUserCompanyAndKnowledgeBase</name>
        <script><![CDATA[var GetUserCompanyAndKnowledgeBase = Class.create();
GetUserCompanyAndKnowledgeBase.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    isPublic: function() {
        return true;
    },
	
	getKnowledgeBaseWithStartCategory: function() {
        var result = {};
        var company = this._getCompany(this.getParameter("company"));
		var start_category = this._getParentCategory(company.getValue("u_customer_knowledge_base"), this.getParameter("sysparm_start_category"));

        result = {
            "knowledge_base": company.getValue("u_customer_knowledge_base"),
			"start_category": start_category.getValue("sys_id")
        };

        return JSON.stringify(result);
    },

    getDataInternal: function() {
        var result = {};
        var company = this._getCompany(this.getParameter("company"));

        result = {
            "knowledge_base": company.getValue("u_customer_knowledge_base")
        };

        return JSON.stringify(result);
    },

    getData: function() {
        var result = {};
        var user = this._getUser(this.getParameter("sysparm_user_id"));
        var company = this._getCompany(user.getValue("company"));
		var start_category = this._getParentCategory(company.getValue("u_customer_knowledge_base"), this.getParameter("sysparm_start_category"));

        result = {
            "company": user.getValue("company"),
            "knowledge_base": company.getValue("u_customer_knowledge_base"),
			"start_category": start_category.getValue("sys_id")
        };

        return JSON.stringify(result);
    },

    _getUser: function(sysId) {
        var result = "";
        var user = new GlideRecord("sys_user");
        var find = user.get("sys_id", sysId);
        if (find) {
            result = user;
        }
        return result;
    },

    _getCompany: function(sysId) {
        var result = "";
        var company = new GlideRecord("customer_account");
        var find = company.get("sys_id", sysId);
        if (find) {
            result = company;
        }

        return result;
    },

    _getParentCategory: function(sysId, category) {
        var result = "";
        var parentCategory = new GlideRecord("kb_category");
        parentCategory.addQuery("parent_id", sysId);
        parentCategory.addQuery("value", category);
        parentCategory.query();

        while (parentCategory.next()) {
            result = parentCategory;
        }

        return result;
    },

    type: 'GetUserCompanyAndKnowledgeBase'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-12 06:59:56</sys_created_on>
        <sys_id>8ba891131b422510c2e1433be54bcb03</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>GetUserCompanyAndKnowledgeBase</sys_name>
        <sys_package display_value="Support case" source="x_liisa_support_ca">80d47c06dba7f05001eafad3f3961926</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Support case">80d47c06dba7f05001eafad3f3961926</sys_scope>
        <sys_update_name>sys_script_include_8ba891131b422510c2e1433be54bcb03</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-12 07:02:38</sys_updated_on>
    </sys_script_include>
</record_update>
