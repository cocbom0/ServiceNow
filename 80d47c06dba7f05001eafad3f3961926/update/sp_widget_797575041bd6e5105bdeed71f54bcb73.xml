<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,$compile,$timeout,KnowledgeSearchService) {
	/* widget controller */
	var c = this;
	c.data = c.data;
	c.showRange = c.options.min_scroll_count;
	c.options.title = c.options.title || "${Filter}";
	c.error_text = "${Missing/Invalid Facet Options}";
	c.valid_field = c.data.valid_field;
	c.kind = "variable";
	c.name = c.options.field_name;
	c.isAggregateQuery = c.options.aggregate_query;
	c.showQuery = false;
	c.enableSearch = false;
	c.gotoserver = true;
	c.selected = "";
	c.disableFilter = false;
	c.filteredItems = [];
	c.treeData = false;
	c.cachedCategoryTreeData = "";
	c.noChild = true;
	if(c.name=="kb_category" && c.data.category_as_tree){
		c.treeData = true;
	}

	//seting order to label if no other field is provided
	c.orderby = c.options.order_by && c.options.order_by != "label" ? "order" : "label";
	c.items = [];

	if(c.options.field_name && c.options.table && !c.valid_field && c.data.template)
		c.error_text = "${Field Type Not Supported}";

	c.options.instanceid = c.data.instanceid;

	c.visible = false;
	if(!c.valid_field && c.data.is_admin)
		c.visible = true;

	c.collapse = false;
	c.clear = false;
	if($rootScope.isMobile){
		c.collapse = true;
	}else{
		c.collapse = false;
	}
	
	$scope.displayChildren = function($event, category) {
		$event.stopPropagation();
		category.show_children = !category.show_children;
	};
	
	if(c.name && c.options.table && c.valid_field && c.data.template){
		var input = {};
		input.name = c.name;
		input.title = c.options.title;
		input.element = "facet";
		input.table = c.options.table;
		input.kind = c.kind;
		input.type = c.options.facet_type;
		input.orderby = c.options.order_by || '';
		input.aggregate_query = c.isAggregateQuery;
		input.alt_url_params = c.options.alt_url_params;
		input.show_empty_value = c.options.show_empty_value || false;
		input.treeData = c.treeData;
		
		//Subscribe itself to search service on load
		KnowledgeSearchService.subscribe(input);

		var refreshKbFacet = $rootScope.$on('sp.kb.refresh.facet',function(event,data){
			if(data && data[c.name] && data[c.name].length > 0){
				//do not update the data if the event is generated by same facet
		
				var newdata = data[c.name];
				var isCurrentFacetFiltered = data.meta.categoryFiltered;
				if(c.name == "kb_category" && c.treeData){
					newdata = data.meta.categoryTree;
				}
				if(c.name == "kb_category" && c.treeData){
					 c.cachedCategoryTreeData = data.meta.categoryTree;
				}else{
					 c.cachedCategoryTreeData = "";
				}
				if(!c.clear || KnowledgeSearchService.canUpdateFacet(c.name,c.items,newdata,isCurrentFacetFiltered)){
					c.selection = "";
					c.query = "";
					if(c.name == "kb_category" && c.treeData){
						c.verifyNoChilds(data.meta.categoryTree);	
						c.items = data.meta.categoryTree;
					}else{
						c.items = data[c.name];
					}
				}else{
					if(!(c.name == "kb_category" && c.treeData))
					  c.items = KnowledgeSearchService.setSelections(c.items,newdata);
				}

				if(c.options.template == 'kb_facet_dropdown_select'){
					//handle data population and auto selection
					$timeout(function(){
						angular.element("#select_filter_"+c.options.instanceid).val(c.isSelected(c.items)).trigger("change");
					},0);
				}
				c.visible = true;
			}else{

				//hide facet if no data
				c.cachedCategoryTreeData = "";
				c.visible = false;
				c.items = [];
				c.selection = "";
				c.query = "";
			}

			if(!c.isAggregateQuery || (c.data.facet_depth - 10) < c.items.length){
				c.showQuery = true;
				c.gotoserver = true;
			}else{
				c.gotoserver = false;
			}
		});

		$scope.$watch("c.query",_.debounce(function(event){
			if(c.enableSearch && c.gotoserver)
				c.getMoreData();
			else if(c.enableSearch){
				c.notifyResultUser(c.filteredItems);
			}
		},500));

	}

  c.verifyNoChilds = function(items){
		c.noChild = true;
		for(i=0;i<items.length;i++){
			var item = items[i];
			if(item.childs && item.childs.length > 0){
				c.noChild =false;
				break;
			}
		}
	}
	//Get more results for facet
	c.getMoreData = function(){
		var input = KnowledgeSearchService.getAppliedFilters();
		input.name = c.name;
		input.value = c.query;
		if(c.name == "kb_category" && c.treeData && input.variables.kb_category){
				input.variables.kb_category.treeData = false;
		}
		c.server.get(input).then(function(r) {
			c.disableFilter = true;
			if(r.data && r.data.result && r.data.result[c.name]){
				c.verifyNoChilds(r.data.result[c.name]);	
				c.items = r.data.result[c.name];
				c.showQuery= true;
				c.gotoserver = true;

				if(c.query == "" && (c.data.facet_depth - 10) > c.items.length){
					c.gotoserver = false;
					c.disableFilter = false;
				}
				if(c.query == "" && c.name == "kb_category" && c.treeData){
					c.gotoserver = true;
					if(c.cachedCategoryTreeData != ""){
						c.verifyNoChilds(c.cachedCategoryTreeData);	
						c.items = c.cachedCategoryTreeData;
					}else{
						c.verifyNoChilds(r.data.result.meta.categoryTree);
						c.items = r.data.result.meta.categoryTree;
					}
				}
				c.notifyResultUser(c.items);
			}
		});
	};

	c.notifyResultUser = function(resultLength){
		if(resultLength.length == 0)
			c.notity_noresults = "No results found for your search. Clear text to get all results";
		else
			c.notity_noresults = resultLength.length+ " " + "results found for your search.";
		$timeout(function(){
			$scope.$apply();
		});
	};

	c.filterItems = function(item){
		return item.label 
	};

	//Watch clear link to clear all selections 
	$scope.$watch('c.clear',function(val){
		if(!val){
			c.items.forEach(function(item){
				item.selected = false; 
			});
		}
	});

	c.rowClickCheckbox = function(item){
		var targetEle = event.target;
		if(item){
			var checkboxObjArray = $(targetEle).find('input:checkbox');
			if($(targetEle).attr("class").split(" ")[0]=='checkbox-label'){
					checkboxObjArray = $(targetEle.parentElement).find('input:checkbox');
			}
			if(checkboxObjArray.length>0){
				var checkboxEle = checkboxObjArray[0];
				if(checkboxEle.checked){
					item.selected = false;
					$(checkboxEle).attr("checked", false);
				}else{
					item.selected = true;
					$(checkboxEle).attr("checked", true);
				}
				c.updateKbFilterData(item);
			}
		}
	}
	c.rowClick = function(item){
		if(item.hasOwnProperty("show_children"))
			 item.show_children = !item.show_children;
		c.items.forEach(function(item1){
			item1.selected = false; 
		});
		if(c.name=="kb_category" && c.treeData){
			c.removeSelections(c.items);
		}
		item.selected = true;
		c.updateKbFilterData(item);
	}
	c.removeSelections = function(results){
		results.forEach(function(item){
			item.selected = false;
			if(item.hasOwnProperty("childs"))
				c.removeSelections(item.childs);
		});
	}
	c.updateKbFilterData =function(item){
		if(item){
			var data = {};
			data.name = c.name;
			data.type = c.options.facet_type;
			data.label = (c.options.facet_type == 'dropdown_select') ? c.getLabel(item) : item.id == 'NULL_VALUE' ? c.options.title+" "+item.label : item.label;
			data.id = (c.options.facet_type == 'dropdown_select') ? item : item.id;
			if(c.name == "kb_category" && c.treeData && c.query==""){
				data.categoryFiltered = true;
			}
			
			if(c.options.facet_type == 'multi_select')
				data.selected = item.selected;
			$rootScope.$emit('sp.kb.updated.facet',data);
		}
	};

	var refreshKbFacetSelection = $rootScope.$on("sp.kb.refresh.facet.selection",function(event,data){
		if(data && data[c.name] && data[c.name] == 'selected'){
			c.clear = true;
		}else{
			c.clear = false;
		}
	});

	//check if the item is selected in data
	c.isSelected = function(itemData){
		for(var i=0;i<itemData.length;i++){
			if(itemData[i].selected){
				return itemData[i].id.toString();
			}
		}
		return "";
	};

	//Get label for the item id
	c.getLabel = function(id){

		for(var i=0;i<c.items.length;i++){
			if(c.items[i].id == id){
				return c.items[i].label;
			}
		}
		return '';
	};

	c.clearSelections = function(event){
		event.stopPropagation();
		c.clear = false;
		$rootScope.$emit("sp.kb.updated.facet.selection",{"name":c.name});
		/*Only keyboard navigation*/
		if(event.key)
			$('#f_header_'+c.data.instanceid).focus();
	};
	
	$scope.$on('$destroy',function(){
		refreshKbFacet();
		refreshKbFacetSelection();
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel{&#13;
  border-radius: 0 0 0 0;&#13;
  border: 1px solid #DDDDDD;&#13;
  border-top: 0px;&#13;
  margin-bottom: 0px;&#13;
}&#13;
.panel-heading{&#13;
  margin-bottom:0px;&#13;
  padding:8px 15px;&#13;
}&#13;
.panel-title{&#13;
  color: $text-color;&#13;
  font-size: 13px;&#13;
  font-weight: 600;&#13;
  a{&#13;
    color:$text-color;&#13;
  }&#13;
}&#13;
.remove-bottom-border{&#13;
  border-bottom:0px;&#13;
}&#13;
.float-left{&#13;
  float:right;&#13;
}&#13;
.toggle-icon{&#13;
  font-size: 18px;&#13;
  display:inline-flex;&#13;
  margin-top: 3px;&#13;
}&#13;
.clear-all{&#13;
  z-index:100;&#13;
  position: absolute;&#13;
  padding-right: 10px;&#13;
  right: 45px;&#13;
}&#13;
.invalid-field{&#13;
  color:$brand-danger;&#13;
  padding: 0 15px;&#13;
  padding-bottom:10px; &#13;
}&#13;
.kb-facet-filter-block{&#13;
  line-height: 1.5;&#13;
}&#13;
.facet-search{&#13;
  padding: 10px; &#13;
  border-bottom: 1px solid #DDDDDD;&#13;
}&#13;
.form-control{&#13;
  height:24px;&#13;
}&#13;
.facet-template{&#13;
  overflow: hidden;&#13;
}&#13;
.facet-field-padding{&#13;
  padding: 2px 0 0 15px;&#13;
}&#13;
.facet-scroll{&#13;
  overflow-y: auto; &#13;
}&#13;
.checkbox{&#13;
  margin-top:0;&#13;
  margin-bottom:0;&#13;
}&#13;
.check-icon{&#13;
  color:$link-color;&#13;
}&#13;
.facet-dropdown{&#13;
  margin-right:10px; &#13;
  margin-left:10px;&#13;
}&#13;
ul ,li{&#13;
  list-style:none; &#13;
}&#13;
li{&#13;
  position: relative;&#13;
  padding: 2px 0px;&#13;
  background-color: #fff;&#13;
}&#13;
ul{&#13;
  margin: 0px 10px 0px -25px; &#13;
}&#13;
.filter-groups{&#13;
  margin-bottom:20px; &#13;
}&#13;
.facet-title{&#13;
  padding:10px 16px 0px 16px; &#13;
}&#13;
.cat-facet-title{&#13;
  padding:10px 16px 0px 16px; &#13;
  border-top:1px solid #eeeeee; &#13;
}&#13;
.rating-stars{&#13;
  font-size: 11px; &#13;
}&#13;
.glyphicon-star:before{&#13;
  color: $text-color;&#13;
}&#13;
.glyphicon-star-empty{&#13;
  color: $text-muted;&#13;
}&#13;
a.active,.checkbox-label.active{&#13;
  color:$text-color;&#13;
}&#13;
a:hover,a:focus,.checkbox-label:hover,.checkbox-label:focus{&#13;
  color:$text-color;&#13;
}&#13;
.show-this{&#13;
  display : block !important;&#13;
}&#13;
.checkbox-label{&#13;
  color:$link-color;&#13;
}&#13;
.check-icon {&#13;
  display:none;&#13;
}&#13;
.float-right{&#13;
  float:right;&#13;
  padding-right: 7px;&#13;
}&#13;
input[type='text']{&#13;
  height: 24px;&#13;
}&#13;
.show-more {&#13;
  text-align: center;&#13;
  display: block;&#13;
  height: 40px;&#13;
  padding-top: 9px;&#13;
}&#13;
.kb-name-elips{&#13;
  display: -webkit-box;&#13;
  line-height: 1.4;&#13;
  -webkit-line-clamp: 2;&#13;
  -webkit-box-orient: vertical;&#13;
  overflow: hidden;&#13;
  text-overflow: ellipsis;&#13;
}&#13;
.l-h-1_6x{&#13;
	padding-top : 4px;&#13;
  color :$pre-border-color;&#13;
  width : 8px;&#13;
}&#13;
.list-group {&#13;
	margin :0px;&#13;
}&#13;
li {&#13;
	padding : 0px;&#13;
}&#13;
.sub-category-list { &#13;
	margin : 0px;&#13;
  padding-bottom : 0px;&#13;
  padding-top : 0px;&#13;
}&#13;
.no-indent{&#13;
  	padding-left : 0px !important;&#13;
 }&#13;
.list-left{&#13;
	padding-left :13px;&#13;
}&#13;
.cat-block{&#13;
	-webkit-line-clamp: 2;&#13;
  -webkit-box-orient: vertical;&#13;
  overflow: hidden;&#13;
 text-overflow: ellipsis;&#13;
}&#13;
.border-top{&#13;
	border-top : 1px solid #DDDDDD;&#13;
}&#13;
&#13;
.transparent-button{&#13;
  color:$text-color;&#13;
  background-color: transparent;&#13;
  background-repeat:no-repeat;&#13;
  border: none;&#13;
  cursor:pointer;&#13;
  overflow: ellipsis;&#13;
  outline:none;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,glyph,order,color,css</field_list>
        <has_preview>false</has_preview>
        <id>lh_kb_field_facet</id>
        <internal>false</internal>
        <link><![CDATA[function(scope,element,attrs){
	var c = scope.c;
	if(scope.options.template == 'kb_facet_dropdown_select'){
		//initate and bind to select2
		setTimeout(function(){
			var selectID = $("#select_filter_"+scope.data.instanceid).select2({
				minimumResultsForSearch: scope.options.min_result_count || 10,
				placeholder: "${Filter}"
			});
		}, 0);
	}
	
	c.bindFunctions = function(){
		var collapseIconId = "collapse_icon_"+c.data.instanceid;
		$('#collapse_'+c.data.instanceid).on('shown.bs.collapse', function(){
			$("#"+collapseIconId).removeClass( "fa-plus-square-o" ).addClass( "fa-minus-square-o" );
			$('#panel_'+c.data.instanceid).removeClass("remove-bottom-border");
		});
		$('#collapse_'+c.data.instanceid).on('hidden.bs.collapse', function(){
			$("#"+collapseIconId).removeClass( "fa-minus-square-o" ).addClass( "fa-plus-square-o" );
			$('#panel_'+c.data.instanceid).addClass("remove-bottom-border");
		});
	};
	
	setTimeout(function(){
		c.bindFunctions();
	});
}]]></link>
        <name>LH-Knowledge-Field-Facet</name>
        <option_schema>[{"hint":"Source Table Name (Currently only Knowledge table is supported)","name":"table","default_value":"kb_knowledge","label":"Source Table","type":"choice","choices":[{"label":"Knowledge","value":"kb_knowledge"}]},{"hint":"Source Field Name (String field selection depends on their maxlength, which can be midified with below max length option)","name":"field_name","label":"Source Field","type":"field_name"},{"hint":"HTML Template for facet","name":"template","label":"Facet Template","type":"choice","choices":[{"label":"Single Select","value":"kb_facet_single_select"},{"label":"Multi Select","value":"kb_facet_multi_select"},{"label":"Dropdown Select","value":"kb_facet_dropdown_select"}]},{"hint":"Custom HTML Template (Will be used in place of Facet template) if required mutiselect add 'name,multi_select'","name":"custom_template","label":"Custom Template","type":"string"},{"hint":"Value to order facet content (id , label or any column name for reference field)","name":"order_by","default_value":"label","label":"Order By","type":"string"},{"hint":"Maximum length for string field","name":"max_string_length","default_value":"80","label":"Maximum Length for String field","type":"integer"},{"hint":"Comma separated list of alternate URL parameters for this facet input (Default will be facet identifier)","name":"alt_url_params","label":"Alternate URL Parameters","type":"string"},{"hint":"Fetch maximum values (Limited to facet depth property) Enabling It may impact performance","name":"aggregate_query","default_value":"false","label":"Fetch Maximum Values","type":"boolean"},{"hint":"Show blank value option","name":"show_empty_value","default_value":"false","label":"Show Empty Value","type":"boolean"},{"hint":"Show category hierarchy (valid for kb_category only)","name":"category_as_tree","default_value":"false","label":"Show category hierarchy (valid for kb_category only)","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function($sp) {

	if(!input){
		//set instance sys_id to be used as unique id for collapse
		options.table = "kb_knowledge";
		data.instanceid = $sp.getDisplayValue('sys_id');	
		options.min_result_count = options.min_result_count ? parseInt(options.min_result_count) : 10;
		options.min_scroll_count = options.min_scroll_count ? parseInt(options.min_scroll_count) : 10;
		options.max_string_length = options.max_string_length ? parseInt(options.max_string_length) : 80;
		options.aggregate_query = options.aggregate_query ? options.aggregate_query == 'true' : false;
		options.show_empty_value = options.show_empty_value ? options.show_empty_value == 'true' : false;
		options.alt_url_params = options.alt_url_params || "";

		data.facet_depth = parseInt(gs.getProperty('glide.knowman.search.facet_depth') || 300);
		data.category_as_tree = options.category_as_tree ? options.category_as_tree == 'true' : false;
		data.messages = {};
		
		var facet_type = 'single_select';
		if(options.custom_template){
			var tempAry = options.custom_template.toString().split(",");
			options.custom_template = tempAry[0];

			if(tempAry[1]){
				facet_type = tempAry[1];
			}
		}else if(options.template){
			if(options.template == 'kb_facet_multi_select'){
				facet_type = 'multi_select';
			}else if(options.template == 'kb_facet_dropdown_select'){
				facet_type = 'dropdown_select';
			}
		}
		
		//get html template from options
		options.template = options.custom_template ? options.custom_template : (options.template ? options.template : "kb_facet_single_select");
		//get the template URL/path
		data.template = options.template;//$sp.translateTemplate(options.template);

		if(options.field_name == "kb_category" && data.category_as_tree){
			data.template = "kb_facet_tree_category_select";
			facet_type = 'single_select';
		}
		 options.facet_type = facet_type;
		
		var kbService = new KBPortalService();
		var valid_field = kbService.isValidFacetField(options.table,options.field_name,options.max_string_length);

		//Verification for Invalid Fields
		data.valid_field = valid_field;
		data.is_admin = gs.hasRole("admin");
		//aria labels
        data.messages.FILTER_LABEL = gs.getMessage("Filter");
		data.messages.OPTIONS_LABEL = gs.getMessage("options");
		data.messages.CLEAR_LABEL = gs.getMessage("Clear");
	}else{
		if(input){
			var result = {};
			var facetService = new KBPortalService();
			result = facetService.getFacetByName(
				input.name,
				input.value,
				input.keyword,
				input.language,
				input.variables,
				input.query,
				input.order,
				input.portal_suffix
			);
			data.result = result;
		}
	}
})($sp);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-14 17:02:37</sys_created_on>
        <sys_id>797575041bd6e5105bdeed71f54bcb73</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LH-Knowledge-Field-Facet</sys_name>
        <sys_package display_value="Support case" source="x_liisa_support_ca">80d47c06dba7f05001eafad3f3961926</sys_package>
        <sys_policy/>
        <sys_scope display_value="Support case">80d47c06dba7f05001eafad3f3961926</sys_scope>
        <sys_update_name>sp_widget_797575041bd6e5105bdeed71f54bcb73</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-14 17:02:37</sys_updated_on>
        <template><![CDATA[<div ng-show="c.visible">
  <div class="kb-facet-block_{{::options.instanceid}} hidden-xs hidden-sm" ng-class="$root.showFacet && !$root.showLanguageFacet ? 'show-this' : 'show-not'" ng-cloak>
    <span aria-live="assertive" class="sr-only ng-binding" role="alert">{{c.notity_noresults}}</span>
    <div class="panel panel-{{::options.color}}"  id="panel_{{::data.instanceid}}" ng-class="{'remove-bottom-border':c.collapse}">
      <div class="panel-heading" data-toggle="collapse" data-target="#collapse_{{::data.instanceid}}" aria-controls="collapse_{{::data.instanceid}}">   
        <span class="panel-title">
          <button class="transparent-button" data-toggle="collapse" data-target="#collapse_{{::data.instanceid}}" aria-controls="collapse_{{::data.instanceid}}" id="f_header_{{::data.instanceid}}" aria-label="{{::options.title}} {{data.messages.FILTER_LABEL}} {{data.messages.OPTIONS_LABEL}}">
            <span ng-if="::options.glyph"><fa name="{{::options.glyph}}" />
            </span><span ng-bind="::options.title"></span>
          </button>
        </span>
        <span class="float-left">
          <button class="clear-all transparent-button" ng-show="c.clear" ng-keypress="c.clearSelections($event)" ng-click="c.clearSelections($event)" aria-label="${Clear {{::options.title}} {{data.messages.FILTER_LABEL}}}">${Clear}</button>
          <span class="toggle-icon">
            <i class="fa" id="collapse_icon_{{::data.instanceid}}" ng-class="{'fa-minus-square-o':!c.collapse,'fa-plus-square-o':c.collapse}" aria-hidden="true"></i>
          </span>
        </span>
      </div>
      <div class="collapse" ng-class="::{'in' : !$root.isMobile}" id="collapse_{{::data.instanceid}}">
        <div class="facet-template" ng-cloak ng-if="c.data.template">
          <div ng-include="c.data.template" />
        </div>
        <div ng-if="!c.valid_field" class="invalid-field">${Error} : {{c.error_text}}</div>
      </div>
    </div>
  </div>
</div>
<style>
   /*
    * Note: @media only screen doesnt work appropriately, when placed in css secion.
    * Considered, html {font-size:10px}
    */
   
  @media only screen and (max-width: 991px) {
    .kb-facet-block_{{::options.instanceid}} .facet-field-padding {
      padding: 0.9rem 0 0 1.5rem;
      border-bottom : 0.1rem solid #DDDDDD;
      min-height : 4rem;
    }
     .kb-facet-block_{{::options.instanceid}} .list-downPadding{
			padding-bottom: 0.9rem;
		}
    .kb-facet-block_{{::options.instanceid}} .list-item {
      padding-top: 0.9rem;
      border-top : 0.1rem solid #DDDDDD;
      min-height : 4rem;
    }
    .kb-facet-block_{{::options.instanceid}} .list-group .list-item .level-padding {
      padding-left : 1.5rem;
    }
    .kb-facet-block_{{::options.instanceid}} .list-group .list-item > .list-group .list-item .level-padding {
      padding-left : 3.5rem;
    }
    .kb-facet-block_{{::options.instanceid}} .list-group .list-item > .list-group .list-item > .list-group .list-item .level-padding {
      padding-left : 5.5rem;
    }
    .kb-facet-block_{{::options.instanceid}} .list-group .list-item > .list-group .list-item > .list-group .list-item > .list-group .list-item .level-padding {
      padding-left : 7.5rem;
    }
    .kb-facet-block_{{::options.instanceid}} .list-group .list-item > .list-group .list-item > .list-group .list-item > .list-group .list-item > .list-group .list-item .level-padding {
      padding-left : 9.5rem;
    }
    
  }
  @media only screen and (max-width: 991px) {
    .kb-facet-block_{{::options.instanceid}}  .check-icon {
      float : right;
      font-size: 1.8rem;
      display: inline-flex;
      padding-right : 1.5rem;
      padding-top : 0.2rem;
      display:block;
    }

  }
  @media only screen and (min-width: 991px) { 
    .kb-facet-block_{{::options.instanceid}}  .facet-detail{
      max-height: 21.5rem; 
      padding-top : 0.5rem;
      padding-bottom : 0.5rem;
    }
   .kb-facet-block_{{::options.instanceid}} .sub-category-list {
  			padding-left: 2rem;
		}
  }
</style>]]></template>
    </sp_widget>
</record_update>
