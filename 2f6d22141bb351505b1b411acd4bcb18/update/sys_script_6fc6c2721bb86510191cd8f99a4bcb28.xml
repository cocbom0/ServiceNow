<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_liisa_open_point_open_point_list</collection>
        <condition/>
        <description>Copy Worknotes comments into Case linked with the task</description>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>LH COT BU-VM : Copy Worknotes to Case</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[//Name: Copy work notes from TASK to CASE
//Table:  sn_customerservice_task
//Advanced:  true
//When:  Before Update; Work Notes <changes>
//Condition:  current.work_notes.changes() && current.work_notes.indexOf('Work Note added from:') < 0;
//  Note that the condition prevents the note from copying multiple times.

//Script:

(function onBefore(current, previous /*null when async*/) {

	if(current.work_notes.nil()){
		return;
	}	

	else {
		
		var tasksSysId = current.getValue('sys_id');

		var instanceName = gs.getProperty('instance_name');
		
		var url = "https://" + instanceName + ".service-now.com/sn_customerservice_task.do?sys_id=" + tasksSysId ;

		var tasknumber = '[code]<a href="' + url + '">' + current.number + '</a>[/code]';
		
		var gr = new GlideRecord('x_liisa_support_ca_services'); 
		
		gr.addQuery('sys_id',current.parent);
		gr.query();
		while(gr.next()){
			
			gr.work_notes = gs.getMessage('task_work_notes_added') + " " +tasknumber + " \n " +gs.getMessage('title') + " : " +current.short_description  + "\n " +current.work_notes;
			
			gs.getMessage('submit');
			
			gr.needs_attention = true;
			gr.update();
		}
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>cocbom0</sys_created_by>
        <sys_created_on>2023-02-07 17:45:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6fc6c2721bb86510191cd8f99a4bcb28</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LH COT BU-VM : Copy Worknotes to Case</sys_name>
        <sys_overrides/>
        <sys_package display_value="4Open Point List" source="x_liisa_open_point">2f6d22141bb351505b1b411acd4bcb18</sys_package>
        <sys_policy/>
        <sys_scope display_value="4Open Point List">2f6d22141bb351505b1b411acd4bcb18</sys_scope>
        <sys_update_name>sys_script_6fc6c2721bb86510191cd8f99a4bcb28</sys_update_name>
        <sys_updated_by>cocbom0</sys_updated_by>
        <sys_updated_on>2023-02-07 17:45:38</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6fc6c2721bb86510191cd8f99a4bcb28"/>
</record_update>
